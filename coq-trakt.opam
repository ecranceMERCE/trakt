opam-version: "2.0"
name: "coq-trakt"
version: "dev"
maintainer: "Enzo Crance <enzo.crance@inria.fr>"
authors: [ "Enzo Crance" ]
license: "LGPL-3"
homepage: "https://github.com/ecranceMERCE/trakt"
bug-reports: "https://github.com/ecranceMERCE/trakt/issues"
dev-repo: "git+https://github.com/ecranceMERCE/trakt.git"
build: [ make ]
install: [ make "install" ]
depends: [
  "coq-elpi" {>= "1.11.1" & < "1.12~"}
  "coq" {>= "8.13~" & < "8.14~" }
  "coq-mathcomp-ssreflect"
]
tags: [ 
  "category:Computer Science/Decision Procedures and Certified Algorithms/Decision procedures"
  "category:Miscellaneous/Coq Extensions"
  "keyword:automation"
  "keyword:elpi"
  "logpath:Trakt"
]
synopsis: "A generic goal preprocessing tool for proof automation tactics in Coq"
description: """
Trakt is a Coq plugin that provides a new Coq tactic, trakt, for preprocessing goals before handing them to a proof automation tactic, as well as Coq commands to fill a knowledge database before calling the tactic.

Drawing inspiration from the zify tactic in the Coq standard library, it acts like a type-level funnel by casting all the possible values in the goal into a given target type. It can also express logic in Prop or bool according to the user's choice.

The translation is implemented in Coq-Elpi. It is certifying (it leaves no proof obligation), generic (the translation does not focus on a precise theory, it is determined by the parameters and user knowledge), and efficient (it tries to make sparse use of Coq conversion).
"""
url {
  src: "git+https://github.com/ecranceMERCE/trakt.git"
}
